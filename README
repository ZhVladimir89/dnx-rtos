The dnx RTOS  is  a  general  purpose operating  system  based  on  the FreeRTOS
kernel. The dnx layer is modeled on  well-known Unix architecture (everything is
a file). A  destination  of  the  system  are  small  microcontrollers supported
by the FreeRTOS kernel,  especially  32-bit. The system  is easy scalable to the
user's needs,  the user can write own drivers,  virtual devices, programs and so
on. The program layer is mostly compatible with the C standard.

The minimal hardware requirements:
- 32 KiB Flash memory,
- 10 KiB RAM memory.
The hardware requirements depends on the user's configuration, so it's possible
to run the dnx on smaller systems.

The system features:
- user's terminal (via UART interface in example configuration),
- possibility to run many copies of the same program,
- simple porting of PC programs for the dnx (due to the C standard compatibility)
- simple Drivers Layer,
- support many file systems (the VFS Layer),
- interrupts are not masked by the system (the RTOS feature),
- dynamic memory allocation (simple garbage collector for programs),
- supports many CPU architectures (the FreeRTOS feature),
- modular design.

To configure the project, type in the terminal:
    make config

To compile the project, type in the terminal:
    make

Folder structure:
- build  - the project's binaries
- config - the project configuration
- doc    - a documents
- extra  - an extra sources (programs, drivers, etc)
- src    - the project's sources
- tools  - the project's tools (scripts, wizard, etc)
