dnx/FreeRTOS 1.2.4
==================
New Features, Improvements:
- CRC driver
- WDG driver (IWDG)
- procfs: program's file can be opened (usefull in tests for program existing)
- cleaned up headers
- implemented common driver for pipes in file systems
- fgets() reads device files byte by byte (slove problem with EOF)
- some files can be switched to unblocking read (some devices, pipes)
- corrected driver layer, used device id

Fixed Bugs:
- wrong behaviour of fgets() function in case of EOF
- SPI driver: system cannot force to close the opened SPI file
- VFS: errno = "No such device or address" even if file exist
- devfs: file closed cannot be opened again (Device or resource busy error)
- LFS: print Success if file is opened instead of dir in opendir() function
- ifconfig makes crash if tcpipd was killed

dnx/FreeRTOS 1.2.3
==================
New Features, Improvements:
- removed redundant c++ switches in c files
- added stdin flush at program exit
- added new key codes to TTY driver (end, pgup, pgdn, ins)

Fixed Bugs:
- in the PuTTY terminal the screen is incorrectly cleared (cursor not got to home position)

dnx/FreeRTOS 1.2.2
==================
New Features, Improvements:
- cleaned up standard headers, more logical libraries localization
- pipe (in LFS and devfs) not blocks a program if stream is full

Fixed Bugs:
- none

dnx/FreeRTOS 1.2.1
==================
New Features, Improvements:
- implemented SPI driver
- implemented fully configurable STM32F10x PLL driver
- corrected UART driver
- implemented new TTY driver
- corrected Makefile to support C++ files compilation (first approach)

Fixed Bugs:
- TTY incorrectly shows lines (doubles)
- UART driver sometimes cuts data

dnx/FreeRTOS 1.2.0
==================
New Features, Improvements:
- added device lock, unlock functions
- added network support using lwIP library
- added netapi library which is supported by lwIP stack
- changed names of API functions to be more intuitive (e.g. mutex_new(), mutex_lock, etc)
- implemented errno.h and error support
- divided API functions to few libraries (easier to obtain needed functions)
- implemented thread functions in thread.h library
- accelerated program execution, applied shared global variables with standard objects (stdin etc)
- implemented pipe files in lfs and devfs file systems (mkfifo)
- implemented timer.h library to support software timers in 1ms resolution
- removed TRUE and FALSE definitions, use true and false defined in stdbool.h

Fixed Bugs:
- init_driver(): function doesn't color messages
- tty driver: new lines have incorrect lengths (too long)
- kernel configuration: switched in/out macros are inversely assigned
- system creates dead task if not enough free memory
- LFS not report errors when not enough free space left

dnx/FreeRTOS 1.1.0
==================
New Features, Improvements:
- simplified Makefile
- created fast devfs file system
- ioctl requests are calculated by special macros
- applied inline functions instead of macros (where possible)
- implemented queue support
- implemented "X" and "i" flags in printf() family functions
- simplified file system and driver layers (many changes)
- some paths are corrected with CWD path
- added init level to initd
- improved CPU load measurement
- removed not completed posix port
- removed appfs and moved this functionality to procfs
- added modules and file system templates
- big improvement of GPIO driver, simplified pin configuration and usage
- implemented system() function
- corrected stdio.h library

Fixed Bugs:
- TTY initialization fault
- fprintf() string terminator
- NULL pointer bug if module does not allocate memory region
- SDSPI: added interface function to mutex section
- system crash if program parameters start with " and ' characters
- fatfs memory leakage

dnx/FreeRTOS 1.0.0
==================
New Features, Improvements:
- first system release, basic features
